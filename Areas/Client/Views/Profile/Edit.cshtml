@model EventSphere.Models.ModelViews.ProfileEditModel

@{
    Layout = "~/Areas/Client/Views/Shared/_LayoutClient.cshtml";
    ViewData["Title"] = "Edit profile";
    ViewData["HeroTitle"] = ViewData["Title"];
    ViewData["HeroSubtitle"] = "Cập nhật thông tin cá nhân của bạn";
}

@section styles {
    <style>
        /* giống theme của Index: dark translucent card, chữ sáng, nút vàng */
        .edit-card {
            max-width: 820px;
            margin: 30px auto 80px;
            background: rgba(10,10,10,0.78);
            color: #e9eef6;
            border-radius: 10px;
            border: 1px solid rgba(255,255,255,0.04);
            box-shadow: 0 20px 40px rgba(0,0,0,0.6);
            overflow: hidden;
        }

            .edit-card .card-header {
                background: linear-gradient(90deg, rgba(255,255,255,0.02), rgba(255,255,255,0.01));
                color: #ffd34d;
                text-align: center;
                padding: 14px 18px;
                border-bottom: 1px solid rgba(255,255,255,0.03);
            }

            .edit-card .card-body {
                padding: 24px;
                background: transparent;
            }

        .form-control-dark {
            background: rgba(255,255,255,0.03);
            color: #fff;
            border: 1px solid rgba(255,255,255,0.06);
        }

            .form-control-dark::placeholder {
                color: rgba(255,255,255,0.45);
            }

        .avatar-preview {
            width: 120px;
            height: 120px;
            object-fit: cover;
            border-radius: 50%;
            border: 3px solid rgba(255,255,255,0.06);
            display: inline-block;
        }

        .btn-cancel {
            background: transparent;
            color: #fff;
            border: 1px solid rgba(255,255,255,0.06);
            padding: 8px 16px;
            border-radius: 8px;
        }

        /* Nút save: vàng giống index */
        .btn-save {
            background: linear-gradient(180deg,#ffc107,#ffb300);
            color: #0a0a0a;
            border: 1px solid rgba(0,0,0,0.15);
            padding: 8px 18px;
            border-radius: 8px;
            box-shadow: 0 6px 18px rgba(0,0,0,0.45);
        }

            .btn-save:hover {
                transform: translateY(-2px);
                transition: .08s;
            }

        .small-muted {
            color: rgba(255,255,255,0.55);
        }

        media (max-width:767px) {
            .edit-card

        {
            margin: 16px;
        }

        .avatar-preview {
            width: 110px;
            height: 110px;
        }

        }
    </style>
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-8">
            <div class="card edit-card">
                <div class="card-header">
                    <h3>@ViewData["Title"]</h3>
                </div>

                <div class="card-body">
                    @using (Html.BeginForm("Edit", "Profile", FormMethod.Post, new { enctype = "multipart/form-data", @class = "" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.UserId)
                        @Html.HiddenFor(m => m.ExistingImage)

                        <div class="text-center mb-3">
                            <div class="mb-2">
                                @if (!string.IsNullOrEmpty(Model.ExistingImage))
                                {
                                    <img id="imgPreview" src="@Url.Content(Model.ExistingImage)" class="avatar-preview" alt="avatar" />
                                }
                                else
                                {
                                    <img id="imgPreview" src="@Url.Content("~/images/default-profile.png")" class="avatar-preview" alt="avatar" />
                                }
                            </div>

                            <div class="d-flex justify-content-center">
                                <input type="file" name="ImageFile" id="ImageFile" class="form-control form-control-dark" accept="image/*" style="max-width:320px;" />
                            </div>
                            
                        </div>

                        <div class="row g-3">
                           
                            <div class="col-12">
                                <hr class="my-2" />
                                <h5 class="text-light">🔒 Change password (optional)</h5>
                            </div>

                            <div class="col-md-4">
                                <label class="form-label">Old password</label>
                                <input type="password" name="OldPassword" class="form-control form-control-dark" />
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">New password</label>
                                <input type="password" name="NewPassword" class="form-control form-control-dark" />
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">Confirm password</label>
                                <input type="password" name="ConfirmPassword" class="form-control form-control-dark" />
                            </div>

                            <div class="col-12 d-flex justify-content-between mt-3">
                                <a href="@Url.Action("Index", "Profile", new { area = "Client", id = Model.UserId })" class="btn btn-cancel">⬅Come back</a>
                                <button type="submit" class="btn btn-save">💾 Save changes</button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        // Preview avatar khi chọn file
        document.getElementById('ImageFile')?.addEventListener('change', function (e) {
            const file = e.target.files[0];
            if (!file) return;
            const reader = new FileReader();
            reader.onload = function (ev) {
                const img = document.getElementById('imgPreview');
                if (img) img.src = ev.target.result;
            };
            reader.readAsDataURL(file);
        });
    </script>
}
